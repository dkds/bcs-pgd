package com.neo.database.entities;
// Generated May 9, 2015 3:13:15 PM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "project_ecommerce"
)
public class User implements java.io.Serializable {

    private Integer userId;
    private City city;
    private UserImage userImage;
    private UserSecurityQuestion userSecurityQuestion;
    private UserStatus userStatus;
    private UserType userType;
    private String firstName;
    private String secondName;
    private String lastName;
    private String addressLine1;
    private String addressLine2;
    private String addressLine3;
    private String email;
    private String username;
    private String contactno;
    private String password;
    private String uid;
    private Long uidCreateTime;
    private String contactnoCode;
    private String emailCode;
    private Long createTime;
    private Set<Review> reviews = new HashSet<Review>(0);
    private Set<Container> containers = new HashSet<Container>(0);
    private Set<Message> messagesForUserTo = new HashSet<Message>(0);
    private Set<Message> messagesForUserFrom = new HashSet<Message>(0);

    public User() {
    }

    public User(UserStatus userStatus, UserType userType) {
        this.userStatus = userStatus;
        this.userType = userType;
    }

    public User(City city, UserImage userImage, UserSecurityQuestion userSecurityQuestion, UserStatus userStatus, UserType userType,
                String firstName, String secondName, String lastName, String addressLine1, String addressLine2, String addressLine3,
                String email, String username, String contactno, String password, String uid, Long uidCreateTime, String contactnoCode,
                String emailCode, Long createTime, Set<Review> reviews, Set<Container> containers, Set<Message> messagesForUserTo,
                Set<Message> messagesForUserFrom) {
        this.city = city;
        this.userImage = userImage;
        this.userSecurityQuestion = userSecurityQuestion;
        this.userStatus = userStatus;
        this.userType = userType;
        this.firstName = firstName;
        this.secondName = secondName;
        this.lastName = lastName;
        this.addressLine1 = addressLine1;
        this.addressLine2 = addressLine2;
        this.addressLine3 = addressLine3;
        this.email = email;
        this.username = username;
        this.contactno = contactno;
        this.password = password;
        this.uid = uid;
        this.uidCreateTime = uidCreateTime;
        this.contactnoCode = contactnoCode;
        this.emailCode = emailCode;
        this.createTime = createTime;
        this.reviews = reviews;
        this.containers = containers;
        this.messagesForUserTo = messagesForUserTo;
        this.messagesForUserFrom = messagesForUserFrom;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "user_id", unique = true, nullable = false)
    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "address_city_id")
    public City getCity() {
        return this.city;
    }

    public void setCity(City city) {
        this.city = city;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_image_id")
    public UserImage getUserImage() {
        return this.userImage;
    }

    public void setUserImage(UserImage userImage) {
        this.userImage = userImage;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_security_question_id")
    public UserSecurityQuestion getUserSecurityQuestion() {
        return this.userSecurityQuestion;
    }

    public void setUserSecurityQuestion(UserSecurityQuestion userSecurityQuestion) {
        this.userSecurityQuestion = userSecurityQuestion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_status_id", nullable = false)
    public UserStatus getUserStatus() {
        return this.userStatus;
    }

    public void setUserStatus(UserStatus userStatus) {
        this.userStatus = userStatus;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_type_id", nullable = false)
    public UserType getUserType() {
        return this.userType;
    }

    public void setUserType(UserType userType) {
        this.userType = userType;
    }

    @Column(name = "first_name", length = 45)
    public String getFirstName() {
        return this.firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    @Column(name = "second_name", length = 45)
    public String getSecondName() {
        return this.secondName;
    }

    public void setSecondName(String secondName) {
        this.secondName = secondName;
    }

    @Column(name = "last_name", length = 45)
    public String getLastName() {
        return this.lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    @Column(name = "address_line_1", length = 45)
    public String getAddressLine1() {
        return this.addressLine1;
    }

    public void setAddressLine1(String addressLine1) {
        this.addressLine1 = addressLine1;
    }

    @Column(name = "address_line_2", length = 45)
    public String getAddressLine2() {
        return this.addressLine2;
    }

    public void setAddressLine2(String addressLine2) {
        this.addressLine2 = addressLine2;
    }

    @Column(name = "address_line_3", length = 45)
    public String getAddressLine3() {
        return this.addressLine3;
    }

    public void setAddressLine3(String addressLine3) {
        this.addressLine3 = addressLine3;
    }

    @Column(name = "email", length = 45)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "username", length = 45)
    public String getUsername() {
        return this.username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @Column(name = "contactno", length = 45)
    public String getContactno() {
        return this.contactno;
    }

    public void setContactno(String contactno) {
        this.contactno = contactno;
    }

    @Column(name = "password", length = 45)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Column(name = "uid", length = 45)
    public String getUid() {
        return this.uid;
    }

    public void setUid(String uid) {
        this.uid = uid;
    }

    @Column(name = "uid_create_time")
    public Long getUidCreateTime() {
        return this.uidCreateTime;
    }

    public void setUidCreateTime(Long uidCreateTime) {
        this.uidCreateTime = uidCreateTime;
    }

    @Column(name = "contactno_code", length = 45)
    public String getContactnoCode() {
        return this.contactnoCode;
    }

    public void setContactnoCode(String contactnoCode) {
        this.contactnoCode = contactnoCode;
    }

    @Column(name = "email_code", length = 45)
    public String getEmailCode() {
        return this.emailCode;
    }

    public void setEmailCode(String emailCode) {
        this.emailCode = emailCode;
    }

    @Column(name = "create_time")
    public Long getCreateTime() {
        return this.createTime;
    }

    public void setCreateTime(Long createTime) {
        this.createTime = createTime;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<Review> getReviews() {
        return this.reviews;
    }

    public void setReviews(Set<Review> reviews) {
        this.reviews = reviews;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<Container> getContainers() {
        return this.containers;
    }

    public void setContainers(Set<Container> containers) {
        this.containers = containers;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userByUserTo")
    public Set<Message> getMessagesForUserTo() {
        return this.messagesForUserTo;
    }

    public void setMessagesForUserTo(Set<Message> messagesForUserTo) {
        this.messagesForUserTo = messagesForUserTo;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userByUserFrom")
    public Set<Message> getMessagesForUserFrom() {
        return this.messagesForUserFrom;
    }

    public void setMessagesForUserFrom(Set<Message> messagesForUserFrom) {
        this.messagesForUserFrom = messagesForUserFrom;
    }

}
