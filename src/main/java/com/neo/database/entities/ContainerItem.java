package com.neo.database.entities;
// Generated May 9, 2015 3:13:15 PM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ContainerItem generated by hbm2java
 */
@Entity
@Table(name = "container_item", catalog = "project_ecommerce"
)
public class ContainerItem implements java.io.Serializable {

    private Integer containerItemId;
    private Container container;
    private Item item;
    private BigDecimal unitPrice;
    private Integer quantity;
    private Long createTime;
    private Set<Message> messages = new HashSet<Message>(0);

    public ContainerItem() {
    }

    public ContainerItem(Container container, Item item) {
        this.container = container;
        this.item = item;
    }

    public ContainerItem(Container container, Item item, BigDecimal unitPrice, Integer quantity, Long createTime, Set<Message> messages) {
        this.container = container;
        this.item = item;
        this.unitPrice = unitPrice;
        this.quantity = quantity;
        this.createTime = createTime;
        this.messages = messages;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "container_item_id", unique = true, nullable = false)
    public Integer getContainerItemId() {
        return this.containerItemId;
    }

    public void setContainerItemId(Integer containerItemId) {
        this.containerItemId = containerItemId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "container_id", nullable = false)
    public Container getContainer() {
        return this.container;
    }

    public void setContainer(Container container) {
        this.container = container;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "item_id", nullable = false)
    public Item getItem() {
        return this.item;
    }

    public void setItem(Item item) {
        this.item = item;
    }

    @Column(name = "unit_price", precision = 10)
    public BigDecimal getUnitPrice() {
        return this.unitPrice;
    }

    public void setUnitPrice(BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
    }

    @Column(name = "quantity")
    public Integer getQuantity() {
        return this.quantity;
    }

    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    @Column(name = "create_time")
    public Long getCreateTime() {
        return this.createTime;
    }

    public void setCreateTime(Long createTime) {
        this.createTime = createTime;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "containerItem")
    public Set<Message> getMessages() {
        return this.messages;
    }

    public void setMessages(Set<Message> messages) {
        this.messages = messages;
    }

}
